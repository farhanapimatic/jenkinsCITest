# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

require_relative 'controller_test_base'

class HelloworldControllerTests < ControllerTestBase
  # Called only once for the class before any test has executed
  def self.startup
    self.controller = @@api_client.helloworld
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_1()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_11()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_12()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_13()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_14()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_15()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_16()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_17()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_18()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_19()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_110()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_111()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_112()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_113()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_114()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_115()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_116()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_117()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_118()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_119()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_120()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_121()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_122()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_123()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_124()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_125()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_126()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_127()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_128()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_129()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_130()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_131()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_132()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_133()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_134()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_135()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_136()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_137()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_138()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

  # Testcase for testing endpoint Helloworld
  def test_helloworld_139()

    # Perform the API call through the SDK function
    result = self.class.controller.get_helloworld()

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{  "message": "Hello world"}', @response_catcher.response.raw_body)
  end

end
